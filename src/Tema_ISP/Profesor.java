// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package Tema_ISP;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;

import Tema_ISP.Materie;

public class Profesor {

	private String nume;
	private String user;
	private String parola;
	private boolean logat = false;
	private ArrayList<String> materii = new ArrayList<String>();
	private boolean disponibilitate = true;
	InputStreamReader isr = new InputStreamReader(System.in);
	BufferedReader br = new BufferedReader(isr);

	public Profesor(String nume) {
		super();
		this.nume = nume;
	}

	public Profesor(String nume, String user) {
		super();
		this.nume = nume;
		this.user = user;
	}

	public void afisareProfesor() {
		System.out.println("Profesor: " + this.nume);
	}

	public ArrayList<String> getMaterii() {
		return materii;
	}

	public void logareProfesor() {
		HashMap<String, String> hm = Aplicatie.getConturi();
		if (!logat && hm.get(this.parola) != null) {
			System.out.println("Buna, " + nume);
			logat = true;
		} else if (logat)
			System.out.println("Sunteti deja logat");
		else
			System.out.println("Nu aveti cont");
	}

	public void delogareProfesor() {
		if (logat) {
			System.out.println("La revedere, " + nume);
			logat = false;
		} else
			System.out.println("Nu sunteti inca logat");
	}

	public void modificareParolaProfesor() throws IOException {
		System.out.println("Username: ");
		String u = br.readLine();
		if (u.equals(this.user)) {
			System.out.println("Noua parola: ");
			String pn = br.readLine();
			this.parola = pn;
		} else
			System.out.println("Username invalid");
	}

	public ArrayList<CelulaOrar> vizualizareOrarMaterieProfesor(String materie) {
		ArrayList<CelulaOrar> orarMaterie = new ArrayList<CelulaOrar>();
		if (materii.contains(materie)) {
			for (CelulaOrar celula : Secretar.celuleOrar)
				if (celula.getMaterie().getNumeMaterie().equals(materie) && celula.getMaterie().getProfesor() == this)
					orarMaterie.add(celula);
		} else
			System.out.println("Profesorul nu preda aceasta materie");
		return orarMaterie;
	}

	public ArrayList<CelulaOrar> vizualizareOrarZi(String zi) {
		ArrayList<CelulaOrar> orarZiProfesor = new ArrayList<CelulaOrar>();
		if (zi.equals("Luni") || zi.equals("Marti") || zi.equals("Miercuri") || zi.equals("Joi")
				|| zi.equals("Vineri")) {
			for (CelulaOrar celula : Secretar.celuleOrar)
				if (celula.getSala().getZi().equals(zi) && celula.getMaterie().getProfesor() == this)
					orarZiProfesor.add(celula);
		} else
			System.out.println("Zi invalida");
		return orarZiProfesor;
	}

	public ArrayList<CelulaOrar> vizualizareOrarProfesor() {
		ArrayList<CelulaOrar> orarProfesor = new ArrayList<CelulaOrar>();
		for (CelulaOrar celula : Secretar.celuleOrar)
			if (celula.getMaterie().getProfesor() == this)
				orarProfesor.add(celula);

		return orarProfesor;
	}

	public void adaugareMaterie(String materie) {
		this.materii.add(materie);
	}

	public void stergereMaterie(String materie) {
		if (materii.contains(materie))
			materii.remove(materie);
	}

	public String getUser() {
		return user;
	}

	public void setUser(String user) {
		this.user = user;
	}

	public String getParola() {
		return parola;
	}

	public void setParola(String parola) {
		this.parola = parola;
	}

	public String getNume() {
		return nume;
	}

	public void setNume(String nume) {
		this.nume = nume;
	}

	public boolean isDisponibilitate() {
		return disponibilitate;
	}

	public void setDisponibilitate(boolean disponibilitate) {
		this.disponibilitate = disponibilitate;
	}

};
